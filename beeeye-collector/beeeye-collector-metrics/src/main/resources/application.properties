# kafka config
message.kafka.brokers=10.198.196.63:9093
message.kafka.topic=app-log
message.kafka.consumeGroup=info-collect-consume-group
message.kafka.pollTimeout=100
# es config
indexer.es.ips=10.198.184.168
indexer.es.cluster=elasticsearch
indexer.es.port=9300
indexer.es.sniff=true
indexer.es.index=event-log
indexer.es.doc=log
# redis config
spring.redis.host=10.198.184.167
spring.redis.port=6379
# zookeeper
coordinate.zookeeper.zkServers=10.198.196.63:2181
coordinate.zookeeper.sessionTimeout=60000
coordinate.zookeeper.connectionTimeout=5000
#default dev
spring.profiles.active=dev
#mybatis
mybatis.mapperLocations=classpath*:mapper/*.xml
mybatis.type-aliases-package=com.zero.tech.data.db
#mysql
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://10.198.196.63:3306/dev?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
# es statistic
statistic.es.url=http://192.168.14.111:9200/_sql?sql=
statistic.es.realtimeTemplate=select * from event-log/log where eventType='EVENTTYPE' and uniqueName='UNIQUENAME' and time='TIME' group by status
statistic.es.realtimeAllTemplate=select * from event-log/log where eventType='EVENTTYPE' and time='TIME' group by status
statistic.es.offlineTemplate=select * from event-log/log where eventType='EVENTTYPE' and uniqueName='UNIQUENAME' and day>='BEGIN' and day<='END' group by day, status
statistic.es.offlineAllTemplate=select * from event-log/log where eventType='EVENTTYPE' and day>='BEGIN' and day<='END' group by SCOPE, status
statistic.es.searchTemplate=select * from event-log/log where eventType='EVENTTYPE' and uniqueName='UNIQUENAME' and DATEFIELD>='BEGIN' and DATEFIELD<='END' group by SCOPE, status
statistic.es.searchAllTemplate=select * from event-log/log where eventType='EVENTTYPE' and DATEFIELD>='BEGIN' and DATEFIELD<='END' group by SCOPE, status


